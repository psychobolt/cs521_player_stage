<?php
$cppKeywords=array(
    
    /* C Keywords */
    "free",
    "goto",
    "extern",
    /* C++98 and C++03 */
    "#define",
    "#elif",
    "#else",
    "#endif",
    "#if",
    "#ifdef",
    "#ifndef",
    "#include",
    "#pragma",
    "#using",
    "register",
    "reinterpret_cast",
    "return",
    "selectany",
    "short",
    "signed",
    "sizeof",
    "static",
    "static_cast",
    "struct",
    "switch",
    "template",
    "this",
    "thread",
    "throw",
    "true",
    "try",
    "type_info",
    "typedef",
    "typeid",
    "typename",
    "union",
    "unmanaged",
    "unsigned",
    "using",
    "uuid",
    "virtual",
    "void",
    "volatile",
    "wchar_t",
    "while",
    "__abstract",
    "__alignof",
    "__asm",
    "__based",
    "__box",
    "__cdecl",
    "__declspec",
    "__delegate",
    "__event",
    "__except",
    "__fastcall",
    "__finally",
    "__forceinline",
    "__gc",
    "__identifier",
    "__if_exists",
    "__if_not_exists",
    "__inline",
    "__int16",
    "__int32",
    "__int64",
    "__int8",
    "__interface",
    "__leave",
    "__m128",
    "__m128d",
    "__m128i",
    "__m64",
    "__multiple_inheritance",
    "__nogc",
    "__noop",
    "__pin",
    "__property",
    "__raise",
    "__sealed",
    "__single_inheritance",
    "__stdcall",
    "__super",
    "__try",
    "__try_cast",
    "__typeof",
    "__unhook",
    "__uuidof",
    "__value",
    "__virtual_inheritance",
    "__w64",
    "__wchar_t",
    "attribute",
    "bad_cast",
    "bad_typeid",
    "bool",
    "break",
    "case",
    "catch",
    "char",
    "class",
    "const",
    "const_cast",
    "continue",
    "default",
    "delete",
    "deprecated",
    "dllexport",
    "dllimport",
    "do",
    "double",
    "dynamic_cast",
    "else",
    "enum",
    "except",
    "explicit",
    "false",
    "float",
    "for",
    "friend",
    "if",
    "implements",
    "import",
    "inline",
    "int",
    "long",
    "managed",
    "mutable",
    "naked",
    "namespace",
    "new",
    "noinline",
    "noreturn",
    "nothrow",
    "novtable",
    "operator",
    "private",
    "property",
    "protected",
    "public",
    "size_t",
    "const_iterator",
    /* C++11*/
    "decltype",
    "auto",
    "nullptr",
    "weak_ptr",
    "auto_ptr",
    "shared_ptr",
    "unique_ptr"
    
    );

?>
